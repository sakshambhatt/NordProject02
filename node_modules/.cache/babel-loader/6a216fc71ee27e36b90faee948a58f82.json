{"ast":null,"code":"import _regeneratorRuntime from \"/home/saksham/apps/NordProject02/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/saksham/apps/NordProject02/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nexport default function searchName(_x, _x2, _x3, _x4) {\n  return _searchName.apply(this, arguments);\n}\n\nfunction _searchName() {\n  _searchName = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(resultsDispatch, setStringToSearch, setToSearch, stringToSearch) {\n    var response, results, count;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            results = [];\n            count = -1;\n            _context.prev = 2;\n            _context.next = 5;\n            return axios.get(\"https://swapi.dev/api/people/?search=\".concat(stringToSearch));\n\n          case 5:\n            response = _context.sent;\n            results = response.data.results;\n            count = response.data.count;\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](2);\n            console.error(_context.t0);\n\n          case 13:\n            _context.prev = 13;\n            setToSearch(function () {\n              return false;\n            });\n            setStringToSearch(function () {\n              return \"\";\n            });\n            return _context.finish(13);\n\n          case 17:\n            resultsDispatch({\n              type: \"SEARCH_RESULT\",\n              payload: {\n                results: results,\n                count: count\n              }\n            });\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[2, 10, 13, 17]]);\n  }));\n  return _searchName.apply(this, arguments);\n}","map":{"version":3,"sources":["/home/saksham/apps/NordProject02/src/functions/SearchName.js"],"names":["axios","searchName","resultsDispatch","setStringToSearch","setToSearch","stringToSearch","results","count","get","response","data","console","error","type","payload"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,wBAA8BC,UAA9B;AAAA;AAAA;;;yEAAe,iBACbC,eADa,EAEbC,iBAFa,EAGbC,WAHa,EAIbC,cAJa;AAAA;AAAA;AAAA;AAAA;AAAA;AAOTC,YAAAA,OAPS,GAOC,EAPD;AAQTC,YAAAA,KARS,GAQD,CAAC,CARA;AAAA;AAAA;AAAA,mBAUMP,KAAK,CAACQ,GAAN,gDACyBH,cADzB,EAVN;;AAAA;AAUXI,YAAAA,QAVW;AAaXH,YAAAA,OAAO,GAAGG,QAAQ,CAACC,IAAT,CAAcJ,OAAxB;AACAC,YAAAA,KAAK,GAAGE,QAAQ,CAACC,IAAT,CAAcH,KAAtB;AAdW;AAAA;;AAAA;AAAA;AAAA;AAgBXI,YAAAA,OAAO,CAACC,KAAR;;AAhBW;AAAA;AAkBXR,YAAAA,WAAW,CAAC;AAAA,qBAAM,KAAN;AAAA,aAAD,CAAX;AACAD,YAAAA,iBAAiB,CAAC;AAAA,qBAAM,EAAN;AAAA,aAAD,CAAjB;AAnBW;;AAAA;AAqBbD,YAAAA,eAAe,CAAC;AAAEW,cAAAA,IAAI,EAAE,eAAR;AAAyBC,cAAAA,OAAO,EAAE;AAAER,gBAAAA,OAAO,EAAPA,OAAF;AAAWC,gBAAAA,KAAK,EAALA;AAAX;AAAlC,aAAD,CAAf;;AArBa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import axios from \"axios\";\nexport default async function searchName(\n  resultsDispatch,\n  setStringToSearch,\n  setToSearch,\n  stringToSearch\n) {\n  let response;\n  let results = [];\n  let count = -1;\n  try {\n    response = await axios.get(\n      `https://swapi.dev/api/people/?search=${stringToSearch}`\n    );\n    results = response.data.results;\n    count = response.data.count;\n  } catch (error) {\n    console.error(error);\n  } finally {\n    setToSearch(() => false);\n    setStringToSearch(() => \"\");\n  }\n  resultsDispatch({ type: \"SEARCH_RESULT\", payload: { results, count } });\n}\n"]},"metadata":{},"sourceType":"module"}