{"ast":null,"code":"import _regeneratorRuntime from \"/home/saksham/apps/NordProject02/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/saksham/apps/NordProject02/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/saksham/apps/NordProject02/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nexport default function usePeople(_ref) {\n  _s();\n\n  var pageNumber = _ref.pageNumber;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      people = _useState2[0],\n      setPeople = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      status = _useState4[0],\n      setStatus = _useState4[1];\n\n  useEffect(function () {\n    _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setStatus(\"loading\");\n              _context.prev = 1;\n              _context.next = 4;\n              return axios.get(\"https://swapi.dev/api/people/?page=\".concat(pageNumber));\n\n            case 4:\n              response = _context.sent;\n\n              if (response.status === 200) {\n                setStatus(\"\");\n                setPeople(function () {\n                  return response.data.results;\n                });\n              }\n\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](1);\n              setStatus(\"\" + _context.t0);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 8]]);\n    }))();\n  }, [pageNumber]);\n  return {\n    people: people,\n    status: status\n  };\n}\n\n_s(usePeople, \"eba73R75HVaL3MY0/N9qgF2DJy8=\");","map":{"version":3,"sources":["/home/saksham/apps/NordProject02/src/hooks/usePeople.js"],"names":["axios","useState","useEffect","usePeople","pageNumber","people","setPeople","status","setStatus","get","response","data","results"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,eAAe,SAASC,SAAT,OAAmC;AAAA;;AAAA,MAAdC,UAAc,QAAdA,UAAc;;AAChD,kBAA4BH,QAAQ,CAAC,EAAD,CAApC;AAAA;AAAA,MAAOI,MAAP;AAAA,MAAeC,SAAf;;AACA,mBAA4BL,QAAQ,CAAC,EAAD,CAApC;AAAA;AAAA,MAAOM,MAAP;AAAA,MAAeC,SAAf;;AACAN,EAAAA,SAAS,CAAC,YAAM;AACd,6DAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AACCM,cAAAA,SAAS,CAAC,SAAD,CAAT;AADD;AAAA;AAAA,qBAKoBR,KAAK,CAACS,GAAN,8CACuBL,UADvB,EALpB;;AAAA;AAKGM,cAAAA,QALH;;AAQG,kBAAIA,QAAQ,CAACH,MAAT,KAAoB,GAAxB,EAA6B;AAC3BC,gBAAAA,SAAS,CAAC,EAAD,CAAT;AACAF,gBAAAA,SAAS,CAAC;AAAA,yBAAMI,QAAQ,CAACC,IAAT,CAAcC,OAApB;AAAA,iBAAD,CAAT;AACD;;AAXJ;AAAA;;AAAA;AAAA;AAAA;AAaGJ,cAAAA,SAAS,CAAC,gBAAD,CAAT;;AAbH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;AAgBD,GAjBQ,EAiBN,CAACJ,UAAD,CAjBM,CAAT;AAkBA,SAAO;AAAEC,IAAAA,MAAM,EAANA,MAAF;AAAUE,IAAAA,MAAM,EAANA;AAAV,GAAP;AACD;;GAtBuBJ,S","sourcesContent":["import axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nexport default function usePeople({ pageNumber }) {\n  const [people, setPeople] = useState([]);\n  const [status, setStatus] = useState(\"\");\n  useEffect(() => {\n    (async function () {\n      setStatus(\"loading\");\n\n      let response;\n      try {\n        response = await axios.get(\n          `https://swapi.dev/api/people/?page=${pageNumber}`\n        );\n        if (response.status === 200) {\n          setStatus(\"\");\n          setPeople(() => response.data.results);\n        }\n      } catch (error) {\n        setStatus(\"\" + error);\n      }\n    })();\n  }, [pageNumber]);\n  return { people, status };\n}\n"]},"metadata":{},"sourceType":"module"}