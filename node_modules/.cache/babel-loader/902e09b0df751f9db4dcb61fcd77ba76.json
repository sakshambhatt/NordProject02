{"ast":null,"code":"import _regeneratorRuntime from \"/home/saksham/apps/NordProject02/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/saksham/apps/NordProject02/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/saksham/apps/NordProject02/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nexport default function useSpecies(speciesLink) {\n  _s();\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      species = _useState2[0],\n      setSpecies = _useState2[1];\n\n  useEffect(function () {\n    _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response, specie;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios.get(speciesLink);\n\n            case 2:\n              response = _context.sent;\n              specie = {};\n              specie = {\n                name: response.data.name,\n                URL: speciesLink\n              };\n              setSpecies(function () {\n                return specie;\n              });\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  }, []);\n  return species;\n}\n\n_s(useSpecies, \"y/WJHKtFUDqNWy+XH1hN1H16lKw=\");","map":{"version":3,"sources":["/home/saksham/apps/NordProject02/src/hooks/useSpecies.js"],"names":["axios","useEffect","useState","useSpecies","speciesLink","species","setSpecies","get","response","specie","name","data","URL"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,eAAe,SAASC,UAAT,CAAoBC,WAApB,EAAiC;AAAA;;AAC9C,kBAA8BF,QAAQ,CAAC,EAAD,CAAtC;AAAA;AAAA,MAAOG,OAAP;AAAA,MAAgBC,UAAhB;;AAEAL,EAAAA,SAAS,CAAC,YAAM;AACd,6DAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACwBD,KAAK,CAACO,GAAN,CAAUH,WAAV,CADxB;;AAAA;AACOI,cAAAA,QADP;AAEKC,cAAAA,MAFL,GAEc,EAFd;AAGCA,cAAAA,MAAM,GAAG;AAAEC,gBAAAA,IAAI,EAAEF,QAAQ,CAACG,IAAT,CAAcD,IAAtB;AAA4BE,gBAAAA,GAAG,EAAER;AAAjC,eAAT;AACAE,cAAAA,UAAU,CAAC;AAAA,uBAAMG,MAAN;AAAA,eAAD,CAAV;;AAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;AAMD,GAPQ,EAON,EAPM,CAAT;AAQA,SAAOJ,OAAP;AACD;;GAZuBF,U","sourcesContent":["import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\n\nexport default function useSpecies(speciesLink) {\n  const [species, setSpecies] = useState({});\n\n  useEffect(() => {\n    (async function () {\n      const response = await axios.get(speciesLink);\n      let specie = {};\n      specie = { name: response.data.name, URL: speciesLink };\n      setSpecies(() => specie);\n    })();\n  }, []);\n  return species;\n}\n"]},"metadata":{},"sourceType":"module"}